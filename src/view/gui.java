package view;

import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;

/**
 *
 * @author Ad
 */
public class gui extends javax.swing.JFrame {
  private HashMap<String, List<String>> classSubjects = new HashMap<>();

  /**
   * Creates new form test
   */
  public gui() {
    initComponents();
    classSubjects.put("class 10", List.of("Math", "Literature", "English"));
    classSubjects.put("class 11", List.of("Math", "Literature", "English"));
    classSubjects.put("class 12", List.of("Math", "Literature", "English"));

    classBox.addItem("Which class?");
    classBox.addItem("class 10");
    classBox.addItem("class 11");
    classBox.addItem("class 12");

    // Only show login fields initially
    txtfield.setVisible(true);
    passtxtfield.setVisible(true);
    loginbtn.setVisible(true);

    // Hide confirm button, classbox, and other components initially
    scrollPane.setViewportView(null);
    deleteidfield.setVisible(false);
    idtxtfield.setVisible(false);
    jLabel3.setVisible(false);
    radiobtn1.setVisible(false);
    table.setVisible(false);
    radiobtn2.setVisible(false);
    confirmButton.setVisible(false);
    classBox.setVisible(false);
    table.setVisible(false);
    addrowbtn.setVisible(false);
    subjectBox.setVisible(false);
    nametxtfield.setVisible(false);
    scoretxtfield.setVisible(false);
    addsubfield.setVisible(false);
    addsubbtn.setVisible(false);
    desubfield.setVisible(false);
    desubbtn.setVisible(false);
    addclassfield.setVisible(false);
    addclassbtn.setVisible(false);
    declassfield.setVisible(false);
    declassbtn.setVisible(false);
    deleteidbtn.setVisible(false);

    classBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        classBoxActionPerformed(evt);
      }
    });
    subjectBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        subjectBoxActionPerformed(evt);
      }
    });
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">
  private void initComponents() {

    buttonGroup1 = new javax.swing.ButtonGroup();
    buttonGroup2 = new javax.swing.ButtonGroup();
    buttonGroup3 = new javax.swing.ButtonGroup();
    txtfield = new javax.swing.JTextField();
    jLabel1 = new javax.swing.JLabel();
    passtxtfield = new javax.swing.JPasswordField();
    jLabel2 = new javax.swing.JLabel();
    loginbtn = new javax.swing.JButton();
    radiobtn1 = new javax.swing.JRadioButton();
    radiobtn2 = new javax.swing.JRadioButton();
    confirmButton = new javax.swing.JButton();
    jLabel3 = new javax.swing.JLabel();
    classBox = new javax.swing.JComboBox<>();
    addsubfield = new javax.swing.JTextField();
    addsubbtn = new javax.swing.JButton();
    nametxtfield = new javax.swing.JTextField();
    addrowbtn = new javax.swing.JButton();
    scoretxtfield = new javax.swing.JTextField();
    subjectBox = new javax.swing.JComboBox<>();
    scrollPane = new javax.swing.JScrollPane();
    jScrollPane3 = new javax.swing.JScrollPane();
    table = new javax.swing.JTable();
    desubfield = new javax.swing.JTextField();
    desubbtn = new javax.swing.JButton();
    addclassfield = new javax.swing.JTextField();
    declassfield = new javax.swing.JTextField();
    addclassbtn = new javax.swing.JButton();
    declassbtn = new javax.swing.JButton();
    idtxtfield = new javax.swing.JTextField();
    deleteidfield = new javax.swing.JTextField();
    deleteidbtn = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setAlwaysOnTop(true);

    txtfield.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        txtfieldActionPerformed(evt);
      }
    });

    jLabel1.setText("Username");

    passtxtfield.setText("sadadadad");
    passtxtfield.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        passtxtfieldActionPerformed(evt);
      }
    });

    jLabel2.setText("Password:");

    loginbtn.setText("Login Button");
    loginbtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        loginbtnActionPerformed(evt);
      }
    });

    radiobtn1.setText("Yes");

    radiobtn2.setText("No");

    confirmButton.setText("Confirm button");
    confirmButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        confirmButtonActionPerformed(evt);
      }
    });

    jLabel3.setText("Are you a human?");

    classBox.addComponentListener(new java.awt.event.ComponentAdapter() {
      public void componentShown(java.awt.event.ComponentEvent evt) {
        classBoxComponentShown(evt);
      }
    });
    classBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        classBoxActionPerformed(evt);
      }
    });

    addsubfield.setText("ADD SUBJECT");
    addsubfield.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        addsubfieldActionPerformed(evt);
      }
    });

    addsubbtn.setText("add button");
    addsubbtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        addsubbtnActionPerformed(evt);
      }
    });

    addrowbtn.setText("add row button");
    addrowbtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        addrowbtnActionPerformed(evt);
      }
    });

    subjectBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        subjectBoxActionPerformed(evt);
      }
    });

    table.setModel(new javax.swing.table.DefaultTableModel(
        new Object[][] {
            { null, null, null, null },
            { null, null, null, null }
        },
        new String[] {
            "Student_name", "StudentId", "Score", "Attendance"
        }) {
      Class[] types = new Class[] {
          java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Boolean.class
      };

      public Class getColumnClass(int columnIndex) {
        return types[columnIndex];
      }
    });
    jScrollPane3.setViewportView(table);

    scrollPane.setViewportView(jScrollPane3);

    desubfield.setText("DELETE SUBJECT");

    desubbtn.setText("delete button");
    desubbtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        desubbtnActionPerformed(evt);
      }
    });

    addclassfield.setText("ADD CLASS");

    declassfield.setText("DELETE CLASS");
    declassfield.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        declassfieldActionPerformed(evt);
      }
    });

    addclassbtn.setText("add button");
    addclassbtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        addclassbtnActionPerformed(evt);
      }
    });

    declassbtn.setText("delete button");
    declassbtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        declassbtnActionPerformed(evt);
      }
    });

    deleteidbtn.setText("delete row btn");
    deleteidbtn.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        deleteidbtnActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE,
                                    javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(46, 46, 46)
                                        .addComponent(deleteidfield, javax.swing.GroupLayout.PREFERRED_SIZE, 71,
                                            javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(deleteidbtn)))
                                .addGap(0, 69, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(classBox, javax.swing.GroupLayout.PREFERRED_SIZE,
                                    javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                    javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(subjectBox, javax.swing.GroupLayout.PREFERRED_SIZE,
                                    javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(200, 200, 200))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66,
                                javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passtxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 74,
                                javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(148, 148, 148)
                                .addComponent(nametxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 71,
                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(idtxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 71,
                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(scoretxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 71,
                                    javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(addrowbtn)
                                .addGap(76, 76, 76))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addclassbtn)
                                    .addComponent(addclassfield, javax.swing.GroupLayout.PREFERRED_SIZE, 100,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(declassbtn)
                                    .addComponent(declassfield, javax.swing.GroupLayout.PREFERRED_SIZE, 113,
                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addsubbtn)
                                        .addGap(55, 55, 55)
                                        .addComponent(desubbtn))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addsubfield, javax.swing.GroupLayout.PREFERRED_SIZE, 139,
                                            javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(desubfield, javax.swing.GroupLayout.PREFERRED_SIZE, 147,
                                            javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(loginbtn)
                                        .addGap(27, 27, 27))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(txtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 74,
                                            javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(radiobtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 101,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(radiobtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 101,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(confirmButton))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(35, Short.MAX_VALUE)));
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(txtfield, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(nametxtfield, javax.swing.GroupLayout.PREFERRED_SIZE,
                                    javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(scoretxtfield, javax.swing.GroupLayout.PREFERRED_SIZE,
                                    javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idtxtfield, javax.swing.GroupLayout.PREFERRED_SIZE,
                                    javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16,
                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16,
                                    javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radiobtn1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radiobtn2)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passtxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, 22,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loginbtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(addrowbtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(confirmButton)))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 215,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(deleteidfield, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteidbtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(classBox, javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectBox, javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addclassfield, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(declassfield, javax.swing.GroupLayout.PREFERRED_SIZE, 22,
                            javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(desubfield, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addsubfield, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(desubbtn)
                    .addComponent(addclassbtn)
                    .addComponent(addsubbtn)
                    .addComponent(declassbtn))
                .addGap(15, 15, 15)));

    pack();
  }// </editor-fold>

  private void txtfieldActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
  }

  private void passtxtfieldActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
  }

  private void loginbtnActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    String username = txtfield.getText();
    String pass = new String(passtxtfield.getPassword());
    String ad_name = "khoi";
    String ad_pass = "1111";
    if (username.isBlank() || pass.isBlank()) {
      JOptionPane.showMessageDialog(null, "PLease enter both username and password.");
    } else {
      int choice = JOptionPane.showConfirmDialog(null, "Are you sure to log in?", "Notification",
          JOptionPane.YES_NO_CANCEL_OPTION);
      if ((choice == JOptionPane.YES_OPTION) && (username.equals(ad_name)) && (pass.equals(ad_pass))) {
        // Hide login fields and show confirm button
        txtfield.setVisible(false);
        passtxtfield.setVisible(false);
        loginbtn.setVisible(false);
        confirmButton.setVisible(true);
        jLabel3.setVisible(true);
        radiobtn1.setVisible(true);
        radiobtn2.setVisible(true);
        jLabel1.setVisible(false);
        jLabel2.setVisible(false);
      } else {
        JOptionPane.showMessageDialog(null, "Get out of here");
        System.exit(0);
      }
    }
  }

  private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    int choice = JOptionPane.showConfirmDialog(null, "Are you sure you are a human?", "Notification",
        JOptionPane.YES_NO_OPTION);
    if (choice == JOptionPane.NO_OPTION) {
      JOptionPane.showMessageDialog(null, "Get out of here");
      System.exit(0);
    } else {
      jLabel3.setVisible(false);
      radiobtn1.setVisible(false);
      radiobtn2.setVisible(false);
      confirmButton.setVisible(false);
      classBox.setVisible(true);
      nametxtfield.setVisible(true);
      scoretxtfield.setVisible(true);
      addsubfield.setVisible(true);
      addsubbtn.setVisible(true);
      desubbtn.setVisible(true);
      desubfield.setVisible(true);
      addclassfield.setVisible(true);
      addclassbtn.setVisible(true);
      declassfield.setVisible(true);
      declassbtn.setVisible(true);
      idtxtfield.setVisible(true);
      deleteidfield.setVisible(true);
      deleteidbtn.setVisible(true);

      JOptionPane.showMessageDialog(null, "Please select a class.");
    }
  }

  private void addsubbtnActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    String combo = addsubfield.getText();
    if (!combo.isBlank()) {
      subjectBox.addItem(combo);
      JOptionPane.showMessageDialog(null, "add successfully");
      addsubfield.setText(" ");
    } else {
      JOptionPane.showMessageDialog(null, "failed");
    }
  }

  private void addsubfieldActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
  }

  private void classBoxActionPerformed(java.awt.event.ActionEvent evt) {
    String selectedClass = (String) classBox.getSelectedItem();

    subjectBox.removeAllItems();
    if (classSubjects.containsKey(selectedClass)) {
      List<String> subjects = classSubjects.get(selectedClass);
      for (String subject : subjects) {
        subjectBox.addItem(subject);
      }
      subjectBox.setVisible(true);
    } else {
      subjectBox.setVisible(false);
    }
  }

  private void classBoxComponentShown(java.awt.event.ComponentEvent evt) {
    // TODO add your handling code here:
    String selectedClass = (String) classBox.getSelectedItem();

    // Clear and hide the subjectBox initially
    subjectBox.removeAllItems();
    subjectBox.setVisible(false);
    table.setVisible(false); // Hide table until a subject is selected
    addrowbtn.setVisible(true);

    if ("class 10".equals(selectedClass)) {
      // Add relevant subjects for "class 10"
      subjectBox.addItem("Math");
      subjectBox.addItem("Literature");
      subjectBox.addItem("English");

      // Show the subjectBox when class 10 is selected
      subjectBox.setVisible(true);
    } else if ("class 11".equals(selectedClass)) {
      // Add relevant subjects for "class 11"
      subjectBox.addItem("Math");
      subjectBox.addItem("Literature");
      subjectBox.addItem("English");

      subjectBox.setVisible(true);
    } else if ("class 12".equals(selectedClass)) {
      // Add relevant subjects for "class 11"
      subjectBox.addItem("Math");
      subjectBox.addItem("Literature");
      subjectBox.addItem("English");

      subjectBox.setVisible(true);
    }
  }

  private void addrowbtnActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    String score = scoretxtfield.getText();
    String student = nametxtfield.getText();
    String id = idtxtfield.getText();

    if (!score.isBlank() || !student.isBlank()) {
      DefaultTableModel model = (DefaultTableModel) table.getModel();
      model.addRow(new Object[] { student, id, score });
    } else {
      JOptionPane.showMessageDialog(null, "invalid");
    }
  }

  private void subjectBoxActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    String selectedSubject = (String) subjectBox.getSelectedItem();

    // Clear the table and add relevant data based on selected subject
    DefaultTableModel model = (DefaultTableModel) table.getModel();
    model.setRowCount(0); // Clear existing rows

    if ("Math".equals(selectedSubject)) {
      // Populate table with data for Math
      scrollPane.setViewportView(table);
      table.setVisible(true);
      scrollPane.setVisible(true);
    } else if ("Literature".equals(selectedSubject)) {
      // Populate table with data for Science
      scrollPane.setViewportView(table);
      table.setVisible(true);
      scrollPane.setVisible(true);
    } else if ("English".equals(selectedSubject)) {
      // Populate table with data for History
      scrollPane.setViewportView(table);
      table.setVisible(true);
      scrollPane.setVisible(true);
    }
  }

  private void desubbtnActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    String selectedSubject = (String) subjectBox.getSelectedItem();
    if (selectedSubject != null) {
      subjectBox.removeItem(selectedSubject);
      JOptionPane.showMessageDialog(null, "Subject deleted successfully.");
    } else {
      JOptionPane.showMessageDialog(null, "No subject selected.");
    }
  }

  private void addclassbtnActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    String newClass = addclassfield.getText();
    if (!newClass.isBlank()) {
      classBox.addItem(newClass);

      // Add new class with default subjects
      List<String> defaultSubjects = List.of("Math", "Literature", "English");
      classSubjects.put(newClass, new ArrayList<>(defaultSubjects));

      JOptionPane.showMessageDialog(null, "Class added successfully with default subjects.");
      addclassfield.setText("");
    } else {
      JOptionPane.showMessageDialog(null, "Failed to add class. Please enter a class name.");
    }
  }

  private void declassbtnActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    String selectedClass = (String) classBox.getSelectedItem();
    if (selectedClass != null) {
      classBox.removeItem(selectedClass);
      JOptionPane.showMessageDialog(null, "Class deleted successfully.");
    } else {
      JOptionPane.showMessageDialog(null, "No class selected.");
    }
  }

  private void declassfieldActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
  }

  private void deleteidbtnActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    // Get the entered ID from deleteidfield
    String deleteID = deleteidfield.getText().trim();

    if (deleteID.isEmpty()) {
      JOptionPane.showMessageDialog(null, "Please enter an ID to delete.");
      return;
    }

    // Access the table model to manipulate table data
    DefaultTableModel model = (DefaultTableModel) table.getModel();
    boolean rowFound = false;

    // Iterate backwards through the table rows to find and delete all rows with
    // matching ID
    for (int i = model.getRowCount() - 1; i >= 0; i--) {
      String rowID = model.getValueAt(i, 1).toString(); // Assuming ID is in the second column (index 1)

      if (rowID.equals(deleteID)) {
        model.removeRow(i); // Remove the matching row
        rowFound = true;
      }
    }

    // If at least one row was deleted, show a success message
    if (rowFound) {
      JOptionPane.showMessageDialog(null, "All records for student with ID " + deleteID + " have been deleted.");
    } else {
      // If no matching row was found, show an error message
      JOptionPane.showMessageDialog(null, "No student found with ID " + deleteID + ".");
    }

    // Clear the deleteidfield
    deleteidfield.setText("");
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
    // (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default
     * look and feel.
     * For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    // </editor-fold>
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new test().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify
  private javax.swing.JButton addclassbtn;
  private javax.swing.JTextField addclassfield;
  private javax.swing.JButton addrowbtn;
  private javax.swing.JButton addsubbtn;
  private javax.swing.JTextField addsubfield;
  private javax.swing.ButtonGroup buttonGroup1;
  private javax.swing.ButtonGroup buttonGroup2;
  private javax.swing.ButtonGroup buttonGroup3;
  private javax.swing.JComboBox<String> classBox;
  private javax.swing.JButton confirmButton;
  private javax.swing.JButton declassbtn;
  private javax.swing.JTextField declassfield;
  private javax.swing.JButton deleteidbtn;
  private javax.swing.JTextField deleteidfield;
  private javax.swing.JButton desubbtn;
  private javax.swing.JTextField desubfield;
  private javax.swing.JTextField idtxtfield;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JScrollPane jScrollPane3;
  private javax.swing.JButton loginbtn;
  private javax.swing.JTextField nametxtfield;
  private javax.swing.JPasswordField passtxtfield;
  private javax.swing.JRadioButton radiobtn1;
  private javax.swing.JRadioButton radiobtn2;
  private javax.swing.JTextField scoretxtfield;
  private javax.swing.JScrollPane scrollPane;
  private javax.swing.JComboBox<String> subjectBox;
  private javax.swing.JTable table;
  private javax.swing.JTextField txtfield;
  // End of variables declaration
}
