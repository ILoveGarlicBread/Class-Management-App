/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import view.roundedBorder;
import com.formdev.flatlaf.FlatLightLaf;
import javax.swing.UIManager;
import controller.*;
import javax.swing.JOptionPane;

/**
 *
 * @author lam
 */
public class Main extends javax.swing.JFrame {

    private final SubjectController subjectController;

    /**
     * Creates new form Main
     */
    public Main() {
        subjectController = new SubjectController();
        

        initComponents();
        loadSubjectData();
        loadTeacherData();
        loadStudentData();
        classesButton.setBackground(new java.awt.Color(46, 52, 64));
        studentButton.setBackground(new java.awt.Color(59, 66, 81));
        accountButton.setBackground(new java.awt.Color(46, 52, 64));
        settingsButton.setBackground(new java.awt.Color(46, 52, 64));
        reportButton.setBackground(new java.awt.Color(46, 52, 64));
    }

    String operation = "default";
    int studentsInCurrentClassID;
    LocalDate dateObj = LocalDate.now();
    DateTimeFormatter dayFormat = DateTimeFormatter.ofPattern("dd");
    DateTimeFormatter monthFormat = DateTimeFormatter.ofPattern("MMM");

    public String dayTime() {
        return dateObj.format(dayFormat);
    }

    public String monthTime() {
        return dateObj.format(monthFormat);
    }

    

    public boolean insertStudentData(String name, String email) {
        StudentController studentcontroller = new StudentController();
        return studentcontroller.insertStudentTable(name, email);
    }
    public boolean insertClassData(String className, String subjectName, String teacherName){
        ClassController classcontroller = new ClassController(); 
        return classcontroller.insertClassTable(className, subjectName, teacherName);
    }
    public boolean insertStudentInClassData(int classID, int studentID){
        ClassController classcontroller = new ClassController();
        return classcontroller.insertStudentInClassTable(classID, studentID);
    }

    public boolean deleteStudentData(int ID) {
        StudentController studentcontroller = new StudentController();
        return studentcontroller.deleteStudentTable(ID);
    }
    public boolean deleteClassData(int ID){
        ClassController classcontroller = new ClassController();
        return classcontroller.deleteClassTable(ID);
    }

    public boolean updateStudentData(String name, int ID, String email) {
        StudentController studentcontroller = new StudentController();
        return studentcontroller.updateStudentTable(name, ID, email);
    }
    public boolean updateClassData(String className, int id, String subjectName, String teacherName){
        ClassController classcontroller = new ClassController();
        return classcontroller.updateClassTable(className, id, subjectName, teacherName);
    }

    public void loadClassesData() {
        ClassController classcontroller = new ClassController();
        classcontroller.loadClassesTable(classesTable);
    }

    public void loadSubjectData() {
        SubjectController subjectcontroller = new SubjectController();
        subjectcontroller.loadSubjectComboBox(subjectComboBox);
    }
    public void loadTeacherData(){
        TeacherController teachercontroller = new TeacherController();
        teachercontroller.loadTeacherComboBox(teacherComboBox);
    }
    public void loadStudentData() {
        StudentController studentcontroller = new StudentController();
        studentcontroller.loadStudentTable(studentTable);
    }
    public void loadStudentsInClass(int id){
        ClassController classcontroller = new ClassController();
        classcontroller.loadStudentInClassTable(studentclassTable, id);
    }
     /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidePanel = new javax.swing.JPanel();
        studentButton = new javax.swing.JButton();
        reportButton = new javax.swing.JButton();
        classesButton = new javax.swing.JButton();
        accountButton = new javax.swing.JButton();
        settingsButton = new javax.swing.JButton();
        datePanel = new javax.swing.JPanel();
        dayLabel = new javax.swing.JLabel();
        monthLabel = new javax.swing.JLabel();
        mainPanel = new javax.swing.JTabbedPane();
        studentsPanel = new javax.swing.JPanel();
        studentTableScrollPane = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        studentrefreshButton = new javax.swing.JButton();
        studentaddButton = new javax.swing.JButton();
        studentnameTextField = new javax.swing.JTextField();
        studentemailTextField = new javax.swing.JTextField();
        studentdeleteButton = new javax.swing.JButton();
        studentupdateButton = new javax.swing.JButton();
        studentsearchButton = new javax.swing.JButton();
        studentnameLabel = new javax.swing.JLabel();
        studentemailLabel = new javax.swing.JLabel();
        confirmPanel = new javax.swing.JPanel();
        studentConfirmButton = new javax.swing.JButton();
        studentcancelButton = new javax.swing.JButton();
        classesPanel = new javax.swing.JPanel();
        classesrefreshButton = new javax.swing.JButton();
        classnameTextField = new javax.swing.JTextField();
        subjectComboBox = new javax.swing.JComboBox<>();
        teacherComboBox = new javax.swing.JComboBox<>();
        classinsertButton = new javax.swing.JButton();
        classupdateButton = new javax.swing.JButton();
        classdeleteButton = new javax.swing.JButton();
        classconfirmPanel = new javax.swing.JPanel();
        classConfirmButton = new javax.swing.JButton();
        classcancelButton = new javax.swing.JButton();
        classesTableScrollPane = new javax.swing.JScrollPane();
        classesTable = new javax.swing.JTable();
        classsearchButton = new javax.swing.JButton();
        classnameLabel = new javax.swing.JLabel();
        subjectLabel = new javax.swing.JLabel();
        teacherLabel = new javax.swing.JLabel();
        classopenButton = new javax.swing.JButton();
        reportPanel = new javax.swing.JPanel();
        accountPanel = new javax.swing.JPanel();
        settingPanel = new javax.swing.JPanel();
        studentclassPanel = new javax.swing.JPanel();
        studentclassScrollPane = new javax.swing.JScrollPane();
        studentclassTable = new javax.swing.JTable();
        studentIDTextField = new javax.swing.JTextField();
        studentclassrefreshButton = new javax.swing.JButton();
        StudentIDLabel = new javax.swing.JLabel();
        addStudentButton = new javax.swing.JButton();
        removeStudentButton = new javax.swing.JButton();
        studentclassconfirmPanel = new javax.swing.JPanel();
        studentclassConfirmButton = new javax.swing.JButton();
        studentclasscancelButton = new javax.swing.JButton();
        classIDTextField = new javax.swing.JTextField();
        searchClassButton = new javax.swing.JButton();
        classIDLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 255));
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sidePanel.setBackground(new java.awt.Color(46, 52, 64));

        studentButton.setBackground(new java.awt.Color(46, 52, 64));
        studentButton.setFont(new java.awt.Font("Roboto", 1, 19)); // NOI18N
        studentButton.setForeground(new java.awt.Color(229, 233, 240));
        studentButton.setText("Students");
        studentButton.setBorderPainted(false);
        studentButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        studentButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        studentButton.setIconTextGap(15);
        studentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentButtonActionPerformed(evt);
            }
        });

        reportButton.setBackground(new java.awt.Color(46, 52, 64));
        reportButton.setFont(new java.awt.Font("Roboto", 1, 19)); // NOI18N
        reportButton.setForeground(new java.awt.Color(229, 233, 240));
        reportButton.setText("Report");
        reportButton.setBorderPainted(false);
        reportButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        reportButton.setIconTextGap(15);
        reportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportButtonActionPerformed(evt);
            }
        });

        classesButton.setBackground(new java.awt.Color(46, 52, 64));
        classesButton.setFont(new java.awt.Font("Roboto", 1, 19)); // NOI18N
        classesButton.setForeground(new java.awt.Color(229, 233, 240));
        classesButton.setText("Classes");
        classesButton.setBorderPainted(false);
        classesButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        classesButton.setIconTextGap(15);
        classesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classesButtonActionPerformed(evt);
            }
        });

        accountButton.setBackground(new java.awt.Color(46, 52, 64));
        accountButton.setFont(new java.awt.Font("Roboto", 1, 19)); // NOI18N
        accountButton.setForeground(new java.awt.Color(229, 233, 240));
        accountButton.setText("Account");
        accountButton.setBorderPainted(false);
        accountButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        accountButton.setIconTextGap(15);
        accountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountButtonActionPerformed(evt);
            }
        });

        settingsButton.setBackground(new java.awt.Color(46, 52, 64));
        settingsButton.setFont(new java.awt.Font("Roboto", 1, 19)); // NOI18N
        settingsButton.setForeground(new java.awt.Color(229, 233, 240));
        settingsButton.setText("Settings");
        settingsButton.setBorderPainted(false);
        settingsButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        settingsButton.setIconTextGap(15);
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout sidePanelLayout = new javax.swing.GroupLayout(sidePanel);
        sidePanel.setLayout(sidePanelLayout);
        sidePanelLayout.setHorizontalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(settingsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                        .addComponent(accountButton, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                        .addComponent(studentButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                        .addComponent(classesButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
                    .addComponent(reportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        sidePanelLayout.setVerticalGroup(
            sidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePanelLayout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(studentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(classesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(reportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(accountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(settingsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173))
        );

        getContentPane().add(sidePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 199, 220, 670));

        datePanel.setBackground(new java.awt.Color(46, 52, 64));

        dayLabel.setFont(new java.awt.Font("Roboto Black", 1, 36)); // NOI18N
        dayLabel.setForeground(new java.awt.Color(229, 233, 240));
        dayLabel.setText(LocalDate.now().format(dayFormat));

        monthLabel.setFont(new java.awt.Font("Roboto Black", 1, 36)); // NOI18N
        monthLabel.setForeground(new java.awt.Color(136, 192, 208));
        monthLabel.setText(dateObj.format(monthFormat));

        javax.swing.GroupLayout datePanelLayout = new javax.swing.GroupLayout(datePanel);
        datePanel.setLayout(datePanelLayout);
        datePanelLayout.setHorizontalGroup(
            datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datePanelLayout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(dayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(monthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        datePanelLayout.setVerticalGroup(
            datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datePanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayLabel)
                    .addComponent(monthLabel))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        getContentPane().add(datePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, -1));

        mainPanel.setBackground(new java.awt.Color(76, 86, 106));

        studentsPanel.setBackground(new java.awt.Color(59, 66, 82));

        studentTableScrollPane.setForeground(new java.awt.Color(153, 255, 255));

        studentTable.setBackground(new java.awt.Color(59, 66, 82));
        studentTable.setForeground(new java.awt.Color(229, 233, 240));
        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentTable.setFocusable(false);
        studentTable.setGridColor(new java.awt.Color(229, 233, 240));
        studentTable.getTableHeader().setBackground(new java.awt.Color(76, 86, 106));
        studentTable.getTableHeader().setForeground(new java.awt.Color(229, 233, 240));
        studentTable.setSelectionBackground(new java.awt.Color(229, 233, 240));
        studentTable.setSelectionForeground(new java.awt.Color(46, 52, 64));
        studentTable.setShowGrid(true);
        studentTableScrollPane.setViewportView(studentTable);

        studentrefreshButton.setBackground(new java.awt.Color(76, 86, 106));
        studentrefreshButton.setForeground(new java.awt.Color(229, 233, 240));
        studentrefreshButton.setText("Refresh");
        studentrefreshButton.setBorderPainted(false);
        studentrefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentrefreshButtonActionPerformed(evt);
            }
        });

        studentaddButton.setBackground(new java.awt.Color(76, 86, 106));
        studentaddButton.setForeground(new java.awt.Color(229, 233, 240));
        studentaddButton.setText("Add");
        studentaddButton.setBorderPainted(false);
        studentaddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentaddButtonActionPerformed(evt);
            }
        });

        studentnameTextField.setBackground(new java.awt.Color(67, 76, 94));
        studentnameTextField.setForeground(new java.awt.Color(229, 233, 240));
        studentnameTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(59, 66, 81), 3, true));
        studentnameTextField.setCaretColor(new java.awt.Color(229, 233, 240));
        studentnameTextField.setPreferredSize(new java.awt.Dimension(80, 31));

        studentemailTextField.setBackground(new java.awt.Color(67, 76, 94));
        studentemailTextField.setForeground(new java.awt.Color(229, 233, 240));
        studentemailTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(59, 66, 81), 3, true));
        studentemailTextField.setCaretColor(new java.awt.Color(229, 233, 240));
        studentemailTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        studentemailTextField.setPreferredSize(new java.awt.Dimension(80, 31));

        studentdeleteButton.setBackground(new java.awt.Color(76, 86, 106));
        studentdeleteButton.setForeground(new java.awt.Color(229, 233, 240));
        studentdeleteButton.setText("Delete Selected");
        studentdeleteButton.setBorderPainted(false);
        studentdeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentdeleteButtonActionPerformed(evt);
            }
        });

        studentupdateButton.setBackground(new java.awt.Color(76, 86, 106));
        studentupdateButton.setForeground(new java.awt.Color(229, 233, 240));
        studentupdateButton.setText("Update Selected");
        studentupdateButton.setBorderPainted(false);
        studentupdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentupdateButtonActionPerformed(evt);
            }
        });

        studentsearchButton.setBackground(new java.awt.Color(76, 86, 106));
        studentsearchButton.setForeground(new java.awt.Color(229, 233, 240));
        studentsearchButton.setText("Search");
        studentsearchButton.setBorderPainted(false);
        studentsearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentsearchButtonActionPerformed(evt);
            }
        });

        studentnameLabel.setBackground(new java.awt.Color(59, 66, 82));
        studentnameLabel.setForeground(new java.awt.Color(229, 233, 240));
        studentnameLabel.setText("Name:");

        studentemailLabel.setBackground(new java.awt.Color(59, 66, 82));
        studentemailLabel.setForeground(new java.awt.Color(229, 233, 240));
        studentemailLabel.setText("Email:");

        confirmPanel.setBackground(new java.awt.Color(59, 66, 82));

        studentConfirmButton.setBackground(new java.awt.Color(94, 129, 172));
        studentConfirmButton.setForeground(new java.awt.Color(229, 233, 240));
        studentConfirmButton.setText("Confirm");
        studentConfirmButton.setBorderPainted(false);
        studentConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentConfirmButtonActionPerformed(evt);
            }
        });

        studentcancelButton.setBackground(new java.awt.Color(76, 86, 106));
        studentcancelButton.setForeground(new java.awt.Color(229, 233, 240));
        studentcancelButton.setText("Cancel");
        studentcancelButton.setBorderPainted(false);
        studentcancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentcancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout confirmPanelLayout = new javax.swing.GroupLayout(confirmPanel);
        confirmPanel.setLayout(confirmPanelLayout);
        confirmPanelLayout.setHorizontalGroup(
            confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(studentConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(studentcancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        confirmPanelLayout.setVerticalGroup(
            confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, confirmPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentConfirmButton)
                    .addComponent(studentcancelButton)))
        );

        javax.swing.GroupLayout studentsPanelLayout = new javax.swing.GroupLayout(studentsPanel);
        studentsPanel.setLayout(studentsPanelLayout);
        studentsPanelLayout.setHorizontalGroup(
            studentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentsPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(studentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentsPanelLayout.createSequentialGroup()
                        .addGroup(studentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentsPanelLayout.createSequentialGroup()
                                .addComponent(studentrefreshButton)
                                .addGap(18, 18, 18)
                                .addComponent(studentupdateButton))
                            .addComponent(studentnameLabel))
                        .addGap(18, 18, 18)
                        .addGroup(studentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentsPanelLayout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(studentemailLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(studentsPanelLayout.createSequentialGroup()
                                .addComponent(studentdeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(confirmPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(studentsPanelLayout.createSequentialGroup()
                        .addComponent(studentTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 997, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(studentsPanelLayout.createSequentialGroup()
                        .addComponent(studentnameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(studentemailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(studentaddButton)
                        .addGap(18, 18, 18)
                        .addComponent(studentsearchButton)))
                .addGap(33, 33, 33))
        );
        studentsPanelLayout.setVerticalGroup(
            studentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentsPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(studentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentnameLabel)
                    .addComponent(studentemailLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(studentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(studentaddButton)
                        .addComponent(studentsearchButton)
                        .addComponent(studentemailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(studentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confirmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(studentsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(studentrefreshButton)
                        .addComponent(studentupdateButton)
                        .addComponent(studentdeleteButton)))
                .addGap(18, 18, 18)
                .addComponent(studentTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(171, 171, 171))
        );

        mainPanel.addTab("tab2", studentsPanel);

        classesPanel.setBackground(new java.awt.Color(59, 66, 82));

        classesrefreshButton.setBackground(new java.awt.Color(76, 86, 106));
        classesrefreshButton.setForeground(new java.awt.Color(229, 233, 240));
        classesrefreshButton.setText("Refresh");
        classesrefreshButton.setBorderPainted(false);
        classesrefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classesrefreshButtonActionPerformed(evt);
            }
        });

        classnameTextField.setBackground(new java.awt.Color(67, 76, 94));
        classnameTextField.setForeground(new java.awt.Color(229, 233, 240));
        classnameTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(59, 66, 81), 3, true));
        classnameTextField.setCaretColor(new java.awt.Color(229, 233, 240));

        subjectComboBox.setBackground(new java.awt.Color(76, 86, 106));
        subjectComboBox.setForeground(new java.awt.Color(229, 233, 240));
        subjectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        subjectComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectComboBoxActionPerformed(evt);
            }
        });

        teacherComboBox.setBackground(new java.awt.Color(76, 86, 106));
        teacherComboBox.setForeground(new java.awt.Color(229, 233, 240));
        teacherComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        teacherComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teacherComboBoxActionPerformed(evt);
            }
        });

        classinsertButton.setBackground(new java.awt.Color(76, 86, 106));
        classinsertButton.setForeground(new java.awt.Color(229, 233, 240));
        classinsertButton.setText("Add");
        classinsertButton.setBorderPainted(false);
        classinsertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classinsertButtonActionPerformed(evt);
            }
        });

        classupdateButton.setBackground(new java.awt.Color(76, 86, 106));
        classupdateButton.setForeground(new java.awt.Color(229, 233, 240));
        classupdateButton.setText("Update Selected");
        classupdateButton.setBorderPainted(false);
        classupdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classupdateButtonActionPerformed(evt);
            }
        });

        classdeleteButton.setBackground(new java.awt.Color(76, 86, 106));
        classdeleteButton.setForeground(new java.awt.Color(229, 233, 240));
        classdeleteButton.setText("Delete Selected");
        classdeleteButton.setBorderPainted(false);
        classdeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classdeleteButtonActionPerformed(evt);
            }
        });

        classconfirmPanel.setBackground(new java.awt.Color(59, 66, 82));

        classConfirmButton.setBackground(new java.awt.Color(94, 129, 172));
        classConfirmButton.setForeground(new java.awt.Color(229, 233, 240));
        classConfirmButton.setText("Confirm");
        classConfirmButton.setBorderPainted(false);
        classConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classConfirmButtonActionPerformed(evt);
            }
        });

        classcancelButton.setBackground(new java.awt.Color(76, 86, 106));
        classcancelButton.setForeground(new java.awt.Color(229, 233, 240));
        classcancelButton.setText("Cancel");
        classcancelButton.setBorderPainted(false);
        classcancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classcancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout classconfirmPanelLayout = new javax.swing.GroupLayout(classconfirmPanel);
        classconfirmPanel.setLayout(classconfirmPanelLayout);
        classconfirmPanelLayout.setHorizontalGroup(
            classconfirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classconfirmPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(classConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(classcancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        classconfirmPanelLayout.setVerticalGroup(
            classconfirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, classconfirmPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(classconfirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classConfirmButton)
                    .addComponent(classcancelButton)))
        );

        classesTableScrollPane.setForeground(new java.awt.Color(229, 233, 240));

        classesTable.setBackground(new java.awt.Color(59, 66, 82));
        classesTable.setForeground(new java.awt.Color(229, 233, 240));
        classesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Class Name", "Class ID", "Subject", "Lecturer"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        classesTable.setFocusable(false);
        classesTable.setGridColor(new java.awt.Color(229, 233, 240));
        classesTable.setSelectionBackground(new java.awt.Color(229, 233, 240));
        classesTable.setSelectionForeground(new java.awt.Color(46, 52, 64));
        classesTable.getTableHeader().setBackground(new java.awt.Color(76, 86, 106));
        classesTable.getTableHeader().setForeground(new java.awt.Color(229, 233, 240));
        classesTable.setShowGrid(true);
        classesTableScrollPane.setViewportView(classesTable);

        classsearchButton.setBackground(new java.awt.Color(76, 86, 106));
        classsearchButton.setForeground(new java.awt.Color(229, 233, 240));
        classsearchButton.setText("Search");
        classsearchButton.setBorderPainted(false);

        classnameLabel.setBackground(new java.awt.Color(59, 66, 82));
        classnameLabel.setForeground(new java.awt.Color(229, 233, 240));
        classnameLabel.setText("Class name: ");

        subjectLabel.setBackground(new java.awt.Color(59, 66, 82));
        subjectLabel.setForeground(new java.awt.Color(229, 233, 240));
        subjectLabel.setText("Subject: ");

        teacherLabel.setBackground(new java.awt.Color(59, 66, 82));
        teacherLabel.setForeground(new java.awt.Color(229, 233, 240));
        teacherLabel.setText("Lecturer:");

        classopenButton.setBackground(new java.awt.Color(76, 86, 106));
        classopenButton.setForeground(new java.awt.Color(229, 233, 240));
        classopenButton.setText("Open");
        classopenButton.setBorderPainted(false);
        classopenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classopenButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout classesPanelLayout = new javax.swing.GroupLayout(classesPanel);
        classesPanel.setLayout(classesPanelLayout);
        classesPanelLayout.setHorizontalGroup(
            classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classesPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(classconfirmPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(classesPanelLayout.createSequentialGroup()
                        .addGroup(classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(classnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classnameLabel))
                        .addGap(18, 18, 18)
                        .addGroup(classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(subjectLabel))
                        .addGap(18, 18, 18)
                        .addGroup(classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(classesPanelLayout.createSequentialGroup()
                                .addComponent(teacherLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(classesPanelLayout.createSequentialGroup()
                                .addComponent(teacherComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(classinsertButton)
                                .addGap(18, 18, 18)
                                .addComponent(classsearchButton))))
                    .addGroup(classesPanelLayout.createSequentialGroup()
                        .addGroup(classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(classesTableScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 997, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(classesPanelLayout.createSequentialGroup()
                                .addComponent(classesrefreshButton)
                                .addGap(18, 18, 18)
                                .addComponent(classupdateButton)
                                .addGap(18, 18, 18)
                                .addComponent(classdeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(classopenButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        classesPanelLayout.setVerticalGroup(
            classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classesPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classnameLabel)
                    .addComponent(subjectLabel)
                    .addComponent(teacherLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teacherComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classsearchButton)
                    .addComponent(classinsertButton))
                .addGap(18, 18, 18)
                .addGroup(classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(classesrefreshButton)
                        .addComponent(classupdateButton)
                        .addComponent(classdeleteButton)
                        .addComponent(classopenButton))
                    .addComponent(classconfirmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(classesTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        mainPanel.addTab("tab3", classesPanel);

        reportPanel.setBackground(new java.awt.Color(59, 66, 82));

        javax.swing.GroupLayout reportPanelLayout = new javax.swing.GroupLayout(reportPanel);
        reportPanel.setLayout(reportPanelLayout);
        reportPanelLayout.setHorizontalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1060, Short.MAX_VALUE)
        );
        reportPanelLayout.setVerticalGroup(
            reportPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 886, Short.MAX_VALUE)
        );

        mainPanel.addTab("tab4", reportPanel);

        accountPanel.setBackground(new java.awt.Color(59, 66, 82));

        javax.swing.GroupLayout accountPanelLayout = new javax.swing.GroupLayout(accountPanel);
        accountPanel.setLayout(accountPanelLayout);
        accountPanelLayout.setHorizontalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1060, Short.MAX_VALUE)
        );
        accountPanelLayout.setVerticalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 886, Short.MAX_VALUE)
        );

        mainPanel.addTab("tab6", accountPanel);

        settingPanel.setBackground(new java.awt.Color(59, 66, 82));

        javax.swing.GroupLayout settingPanelLayout = new javax.swing.GroupLayout(settingPanel);
        settingPanel.setLayout(settingPanelLayout);
        settingPanelLayout.setHorizontalGroup(
            settingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1060, Short.MAX_VALUE)
        );
        settingPanelLayout.setVerticalGroup(
            settingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 886, Short.MAX_VALUE)
        );

        mainPanel.addTab("tab7", settingPanel);

        studentclassPanel.setBackground(new java.awt.Color(59, 66, 82));

        studentclassTable.setBackground(new java.awt.Color(59, 66, 82));
        studentclassTable.setForeground(new java.awt.Color(229, 233, 240));
        studentclassTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentclassTable.setFocusable(false);
        studentclassTable.setGridColor(new java.awt.Color(229, 233, 240));
        studentclassTable.getTableHeader().setBackground(new java.awt.Color(76, 86, 106));
        studentclassTable.getTableHeader().setForeground(new java.awt.Color(229, 233, 240));
        studentclassTable.setGridColor(new java.awt.Color(46,52,64));
        studentclassTable.setSelectionBackground(new java.awt.Color(229, 233, 240));
        studentclassTable.setSelectionForeground(new java.awt.Color(46, 52, 64));
        studentclassTable.setShowGrid(true);
        studentclassScrollPane.setViewportView(studentclassTable);

        studentIDTextField.setBackground(new java.awt.Color(67, 76, 94));
        studentIDTextField.setForeground(new java.awt.Color(229, 233, 240));
        studentIDTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(67, 76, 94), 3, true));
        studentIDTextField.setCaretColor(new java.awt.Color(229, 233, 240));
        studentIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIDTextFieldActionPerformed(evt);
            }
        });

        studentclassrefreshButton.setBackground(new java.awt.Color(76, 86, 106));
        studentclassrefreshButton.setForeground(new java.awt.Color(229, 233, 240));
        studentclassrefreshButton.setText("Refresh");
        studentclassrefreshButton.setBorderPainted(false);
        studentclassrefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentclassrefreshButtonActionPerformed(evt);
            }
        });

        StudentIDLabel.setBackground(new java.awt.Color(76, 86, 106));
        StudentIDLabel.setForeground(new java.awt.Color(229, 233, 240));
        StudentIDLabel.setText("Student ID");

        addStudentButton.setBackground(new java.awt.Color(76, 86, 106));
        addStudentButton.setForeground(new java.awt.Color(229, 233, 240));
        addStudentButton.setText("Add Student");
        addStudentButton.setBorderPainted(false);
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        removeStudentButton.setBackground(new java.awt.Color(76, 86, 106));
        removeStudentButton.setForeground(new java.awt.Color(229, 233, 240));
        removeStudentButton.setText("Remove Student");
        removeStudentButton.setBorderPainted(false);

        studentclassconfirmPanel.setBackground(new java.awt.Color(59, 66, 82));

        studentclassConfirmButton.setBackground(new java.awt.Color(94, 129, 172));
        studentclassConfirmButton.setForeground(new java.awt.Color(229, 233, 240));
        studentclassConfirmButton.setText("Confirm");
        studentclassConfirmButton.setBorderPainted(false);
        studentclassConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentclassConfirmButtonActionPerformed(evt);
            }
        });

        studentclasscancelButton.setBackground(new java.awt.Color(76, 86, 106));
        studentclasscancelButton.setForeground(new java.awt.Color(229, 233, 240));
        studentclasscancelButton.setText("Cancel");
        studentclasscancelButton.setBorderPainted(false);
        studentclasscancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentclasscancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentclassconfirmPanelLayout = new javax.swing.GroupLayout(studentclassconfirmPanel);
        studentclassconfirmPanel.setLayout(studentclassconfirmPanelLayout);
        studentclassconfirmPanelLayout.setHorizontalGroup(
            studentclassconfirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentclassconfirmPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(studentclassConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(studentclasscancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        studentclassconfirmPanelLayout.setVerticalGroup(
            studentclassconfirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentclassconfirmPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(studentclassconfirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentclassConfirmButton)
                    .addComponent(studentclasscancelButton)))
        );

        classIDTextField.setBackground(new java.awt.Color(67, 76, 94));
        classIDTextField.setForeground(new java.awt.Color(229, 233, 240));
        classIDTextField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(67, 76, 94), 3, true));
        classIDTextField.setCaretColor(new java.awt.Color(229, 233, 240));

        searchClassButton.setBackground(new java.awt.Color(76, 86, 106));
        searchClassButton.setForeground(new java.awt.Color(229, 233, 240));
        searchClassButton.setText("Search Class");
        searchClassButton.setBorderPainted(false);
        searchClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClassButtonActionPerformed(evt);
            }
        });

        classIDLabel.setBackground(new java.awt.Color(76, 86, 106));
        classIDLabel.setForeground(new java.awt.Color(229, 233, 240));
        classIDLabel.setText("Class ID");

        javax.swing.GroupLayout studentclassPanelLayout = new javax.swing.GroupLayout(studentclassPanel);
        studentclassPanel.setLayout(studentclassPanelLayout);
        studentclassPanelLayout.setHorizontalGroup(
            studentclassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentclassPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(studentclassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentclassScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StudentIDLabel)
                    .addGroup(studentclassPanelLayout.createSequentialGroup()
                        .addGroup(studentclassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentclassPanelLayout.createSequentialGroup()
                                .addComponent(studentclassrefreshButton)
                                .addGap(18, 18, 18)
                                .addComponent(removeStudentButton))
                            .addGroup(studentclassPanelLayout.createSequentialGroup()
                                .addComponent(studentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addStudentButton)))
                        .addGap(265, 265, 265)
                        .addGroup(studentclassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(studentclassconfirmPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentclassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(classIDLabel)
                                .addGroup(studentclassPanelLayout.createSequentialGroup()
                                    .addComponent(classIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(searchClassButton))))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        studentclassPanelLayout.setVerticalGroup(
            studentclassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentclassPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(studentclassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StudentIDLabel)
                    .addComponent(classIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentclassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(classIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchClassButton)
                    .addComponent(addStudentButton))
                .addGap(18, 18, 18)
                .addGroup(studentclassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(studentclassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(studentclassrefreshButton)
                        .addComponent(removeStudentButton))
                    .addComponent(studentclassconfirmPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(studentclassScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(171, Short.MAX_VALUE))
        );

        mainPanel.addTab("tab7", studentclassPanel);

        getContentPane().add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, -62, 1060, 930));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void classesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classesButtonActionPerformed

        subjectComboBox.removeAllItems();
        teacherComboBox.removeAllItems();
        classconfirmPanel.setVisible(false);
        mainPanel.setSelectedIndex(1);
        loadClassesData();
        loadTeacherData();
        loadSubjectData();
       
        studentButton.setBackground(new java.awt.Color(46, 52, 64));
        classesButton.setBackground(new java.awt.Color(59, 66, 81));
        accountButton.setBackground(new java.awt.Color(46, 52, 64));
        settingsButton.setBackground(new java.awt.Color(46, 52, 64));
        reportButton.setBackground(new java.awt.Color(46, 52, 64));
    }//GEN-LAST:event_classesButtonActionPerformed

    private void reportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportButtonActionPerformed
        // TODO add your handling code here:
        mainPanel.setSelectedIndex(2);
        
        studentButton.setBackground(new java.awt.Color(46, 52, 64));
        reportButton.setBackground(new java.awt.Color(59, 66, 81));
        accountButton.setBackground(new java.awt.Color(46, 52, 64));
        settingsButton.setBackground(new java.awt.Color(46, 52, 64));
        classesButton.setBackground(new java.awt.Color(46, 52, 64));
    }//GEN-LAST:event_reportButtonActionPerformed

    private void accountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountButtonActionPerformed
        // TODO add your handling code here:
        mainPanel.setSelectedIndex(3);
        
        studentButton.setBackground(new java.awt.Color(46, 52, 64));
        accountButton.setBackground(new java.awt.Color(59, 66, 81));
        classesButton.setBackground(new java.awt.Color(46, 52, 64));
        settingsButton.setBackground(new java.awt.Color(46, 52, 64));
        reportButton.setBackground(new java.awt.Color(46, 52, 64));
    }//GEN-LAST:event_accountButtonActionPerformed

    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        // TODO add your handling code here:
        mainPanel.setSelectedIndex(4);
        
        studentButton.setBackground(new java.awt.Color(46, 52, 64));
        settingsButton.setBackground(new java.awt.Color(59, 66, 81));
        accountButton.setBackground(new java.awt.Color(46, 52, 64));
        classesButton.setBackground(new java.awt.Color(46, 52, 64));
        reportButton.setBackground(new java.awt.Color(46, 52, 64));
    }//GEN-LAST:event_settingsButtonActionPerformed

    private void studentcancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentcancelButtonActionPerformed
        operation = "default";
        confirmPanel.setVisible(false);
    }//GEN-LAST:event_studentcancelButtonActionPerformed

    private void studentConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentConfirmButtonActionPerformed
        if (operation == "studentinsert") {
            String name = studentnameTextField.getText();
            String email = studentemailTextField.getText();
            boolean success = insertStudentData(name, email);
            if (success) {
                loadStudentData();
            }
            operation = "default";
            confirmPanel.setVisible(false);

        }

        if (operation == "studentupdate") {
            int selectedRow = studentTable.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Please select a student to update.");
                return;
            }
            String studentName = (String) studentTable.getValueAt(selectedRow, 0);
            int studentId = (int) studentTable.getValueAt(selectedRow, 1);
            String studentEmail = (String) studentTable.getValueAt(selectedRow, 2);
            boolean success = updateStudentData(studentName, studentId, studentEmail);
            if (success) {
                loadStudentData();
            }
            operation = "default";
            confirmPanel.setVisible(false);

        }
        if (operation == "studentdelete") {
            int selectedRow = studentTable.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Please select a student to update.");
                return;
            }
            int studentId = (int) studentTable.getValueAt(selectedRow, 1);
            boolean success = deleteStudentData(studentId);
            if (success) {
                loadStudentData();
            }
            operation = "default";
            confirmPanel.setVisible(false);
        }
        operation = "default";
        confirmPanel.setVisible(false);
    }//GEN-LAST:event_studentConfirmButtonActionPerformed

    private void studentsearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentsearchButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentsearchButtonActionPerformed

    private void studentupdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentupdateButtonActionPerformed
        int selectedRow = studentTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a student to update.");
            return;
        }
        confirmPanel.setVisible(true);
        operation = "studentupdate";
    }//GEN-LAST:event_studentupdateButtonActionPerformed

    private void studentdeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentdeleteButtonActionPerformed
        int selectedRow = studentTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a student to delete.");
            return;
        }
        confirmPanel.setVisible(true);
        operation = "studentdelete";
    }//GEN-LAST:event_studentdeleteButtonActionPerformed

    private void studentaddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentaddButtonActionPerformed
        confirmPanel.setVisible(true);
        operation = "studentinsert";
    }//GEN-LAST:event_studentaddButtonActionPerformed

    private void studentrefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentrefreshButtonActionPerformed
        loadStudentData();
    }//GEN-LAST:event_studentrefreshButtonActionPerformed

    private void classcancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classcancelButtonActionPerformed
        classconfirmPanel.setVisible(false);
    }//GEN-LAST:event_classcancelButtonActionPerformed

    private void classConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classConfirmButtonActionPerformed
        if (operation == "classinsert") {
            String className = classnameTextField.getText();
            String teacherName = (String) teacherComboBox.getSelectedItem();
            String subjectName = (String) subjectComboBox.getSelectedItem();
            boolean success = insertClassData(className, subjectName, teacherName);
            if (success) {
                loadClassesData();
            }
            operation = "default";
            classconfirmPanel.setVisible(false);

        }

        if (operation == "classupdate") {
            int selectedRow = classesTable.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Please select a class to update.");
                return;
            }
            String className = classnameTextField.getText();
            String teacherName = (String) teacherComboBox.getSelectedItem();
            int classId = (int) classesTable.getValueAt(classesTable.getSelectedRow(), 1);
            String subjectName = (String) subjectComboBox.getSelectedItem();
            boolean success = updateClassData(className, classId, subjectName, teacherName);
            if (success) {
                loadClassesData();
            }
            operation = "default";
            classconfirmPanel.setVisible(false);

        }
        if (operation == "classdelete") {
            int selectedRow = classesTable.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Please select a class to delete.");
                return;
            }
            int classId = (int) classesTable.getValueAt(selectedRow, 1);
            boolean success = deleteClassData(classId);
            if (success) {
                loadClassesData();
            }
             operation = "default";
            classconfirmPanel.setVisible(false);
        }
       
        operation = "default";
        classconfirmPanel.setVisible(false);
    }//GEN-LAST:event_classConfirmButtonActionPerformed

    private void classdeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classdeleteButtonActionPerformed
        operation = "classdelete";
        classconfirmPanel.setVisible(true);
        
    }//GEN-LAST:event_classdeleteButtonActionPerformed

    private void classupdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classupdateButtonActionPerformed
        classconfirmPanel.setVisible(true);
        operation = "classupdate";
    }//GEN-LAST:event_classupdateButtonActionPerformed

    private void classinsertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classinsertButtonActionPerformed
        operation = "classinsert";
        classconfirmPanel.setVisible(true);

    }//GEN-LAST:event_classinsertButtonActionPerformed

    private void teacherComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teacherComboBoxActionPerformed

    }//GEN-LAST:event_teacherComboBoxActionPerformed

    private void subjectComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectComboBoxActionPerformed

    }//GEN-LAST:event_subjectComboBoxActionPerformed

    private void classesrefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classesrefreshButtonActionPerformed
        loadClassesData();
    }//GEN-LAST:event_classesrefreshButtonActionPerformed

    private void classopenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classopenButtonActionPerformed
        int selectedRow = classesTable.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Please select a class to view.");
                return;
            }
            int classId = (int) classesTable.getValueAt(classesTable.getSelectedRow(), 1);
        loadStudentsInClass(classId);
        studentsInCurrentClassID = classId;
        studentclassconfirmPanel.setVisible(false);
        mainPanel.setSelectedIndex(5);
    }//GEN-LAST:event_classopenButtonActionPerformed

    private void studentIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentIDTextFieldActionPerformed

    private void studentclassConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentclassConfirmButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentclassConfirmButtonActionPerformed

    private void studentclasscancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentclasscancelButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentclasscancelButtonActionPerformed

    private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentButtonActionPerformed
        int studentID = Integer.parseInt(studentIDTextField.getText());
        insertStudentInClassData(studentsInCurrentClassID,studentID);
        loadStudentsInClass(studentsInCurrentClassID);
        
        
    }//GEN-LAST:event_addStudentButtonActionPerformed

    private void searchClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClassButtonActionPerformed
        int classId = Integer.parseInt(classIDTextField.getText());
        loadStudentsInClass(classId);
        studentsInCurrentClassID = classId;
    }//GEN-LAST:event_searchClassButtonActionPerformed

    private void studentclassrefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentclassrefreshButtonActionPerformed
        loadStudentsInClass(studentsInCurrentClassID);
    }//GEN-LAST:event_studentclassrefreshButtonActionPerformed

    private void studentButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_studentButtonActionPerformed
        confirmPanel.setVisible(false);
        mainPanel.setSelectedIndex(0);
        loadStudentData();
        classesButton.setBackground(new java.awt.Color(46, 52, 64));
        studentButton.setBackground(new java.awt.Color(59, 66, 81));
        accountButton.setBackground(new java.awt.Color(46, 52, 64));
        settingsButton.setBackground(new java.awt.Color(46, 52, 64));
        reportButton.setBackground(new java.awt.Color(46, 52, 64));

    }// GEN-LAST:event_studentButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default
     * look and feel.
     * For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
        } catch (Exception e) {
            System.err.println("Failed to initialize FlatLaf");
        }
        UIManager.put("ComboBox.border", new java.awt.Color(76,86,106));
        UIManager.put("ComboBox.foreground", new java.awt.Color(229,233,240));
        UIManager.put("ComboBox.background", new java.awt.Color(76,86,106));
        UIManager.put("ComboBox.selectionBackground", new java.awt.Color(67, 76, 94));
        UIManager.put("ComboBox.selectionForeground", new java.awt.Color(229, 233, 240));
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel StudentIDLabel;
    private javax.swing.JButton accountButton;
    private javax.swing.JPanel accountPanel;
    private javax.swing.JButton addStudentButton;
    private javax.swing.JButton classConfirmButton;
    private javax.swing.JLabel classIDLabel;
    private javax.swing.JTextField classIDTextField;
    private javax.swing.JButton classcancelButton;
    private javax.swing.JPanel classconfirmPanel;
    private javax.swing.JButton classdeleteButton;
    private javax.swing.JButton classesButton;
    private javax.swing.JPanel classesPanel;
    private javax.swing.JTable classesTable;
    private javax.swing.JScrollPane classesTableScrollPane;
    private javax.swing.JButton classesrefreshButton;
    private javax.swing.JButton classinsertButton;
    private javax.swing.JLabel classnameLabel;
    private javax.swing.JTextField classnameTextField;
    private javax.swing.JButton classopenButton;
    private javax.swing.JButton classsearchButton;
    private javax.swing.JButton classupdateButton;
    private javax.swing.JPanel confirmPanel;
    private javax.swing.JPanel datePanel;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JTabbedPane mainPanel;
    private javax.swing.JLabel monthLabel;
    private javax.swing.JButton removeStudentButton;
    private javax.swing.JButton reportButton;
    private javax.swing.JPanel reportPanel;
    private javax.swing.JButton searchClassButton;
    private javax.swing.JPanel settingPanel;
    private javax.swing.JButton settingsButton;
    private javax.swing.JPanel sidePanel;
    private javax.swing.JButton studentButton;
    private javax.swing.JButton studentConfirmButton;
    private javax.swing.JTextField studentIDTextField;
    private javax.swing.JTable studentTable;
    private javax.swing.JScrollPane studentTableScrollPane;
    private javax.swing.JButton studentaddButton;
    private javax.swing.JButton studentcancelButton;
    private javax.swing.JButton studentclassConfirmButton;
    private javax.swing.JPanel studentclassPanel;
    private javax.swing.JScrollPane studentclassScrollPane;
    private javax.swing.JTable studentclassTable;
    private javax.swing.JButton studentclasscancelButton;
    private javax.swing.JPanel studentclassconfirmPanel;
    private javax.swing.JButton studentclassrefreshButton;
    private javax.swing.JButton studentdeleteButton;
    private javax.swing.JLabel studentemailLabel;
    private javax.swing.JTextField studentemailTextField;
    private javax.swing.JLabel studentnameLabel;
    private javax.swing.JTextField studentnameTextField;
    private javax.swing.JButton studentrefreshButton;
    private javax.swing.JPanel studentsPanel;
    private javax.swing.JButton studentsearchButton;
    private javax.swing.JButton studentupdateButton;
    private javax.swing.JComboBox<String> subjectComboBox;
    private javax.swing.JLabel subjectLabel;
    private javax.swing.JComboBox<String> teacherComboBox;
    private javax.swing.JLabel teacherLabel;
    // End of variables declaration//GEN-END:variables
}
